# -----------------------------
# Build System (required)
# -----------------------------
[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

# -----------------------------
# Project Metadata
# -----------------------------
[project]
name = "hijri-datetime"               # PyPI/package install name (`pip install hijri_datetime`)
version = "0.1.0"
authors = [
    {name = "m.lotfi", email = "m.lotfi@email.com"},
]
maintainers = [
    {name = "m.lotfi", email = "m.lotfi@email.com"},
]
description = "Hijri (Islamic) datetime library for Python with partial dates, ranges, and Gregorian/Jalali conversion."
readme = "README.md"
requires-python = ">=3.8"



keywords = ["python", "package", "modules", "portable", "hijri", "islamic", "calendar", "datetime"]

# -----------------------------
# Runtime dependencies
# -----------------------------
dependencies = [
  "jdatetime",
  "requests",
  "numpy",
  "pandas",
]

# -----------------------------
# Optional dependencies
# -----------------------------
[project.optional-dependencies]

# For local development
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=22.0",
    "flake8>=4.0",
    "mypy>=0.900",
    "pre-commit>=2.0",
    "tox>=3.0",
    "build>=0.10",
    "twine>=4.0",
    "setuptools_scm>=6.2",
    "setuptools>=45",
    "wheel",
    "sphinx>=4.0",
    "sphinx-rtd-theme>=1.0",
]

# For testing specifically
test = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
]

# For documentation building
docs = [
    "sphinx>=4.0",
    "sphinx-rtd-theme>=1.0",
]

# For linting only
lint = [
    "black>=22.0",
    "flake8>=4.0",
    "mypy>=0.900",
]

# Unified group
all = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=22.0",
    "flake8>=4.0",
    "mypy>=0.900",
    "pre-commit>=2.0",
    "tox>=3.0",
    "build>=0.10",
    "twine>=4.0",
    "setuptools_scm>=6.2",
    "setuptools>=45",
    "wheel",
    "sphinx>=4.0",
    "sphinx-rtd-theme>=1.0",
]

# -----------------------------
# Project URLs (for PyPI & docs)
# -----------------------------
[project.urls]
Homepage = "https://github.com/mlotfic/hijri_datetime"
Documentation = "https://github.com/mlotfic/hijri_datetime#readme"
Repository = "https://github.com/mlotfic/hijri_datetime"
"Bug Tracker" = "https://github.com/mlotfic/hijri_datetime/issues"
Changelog = "https://github.com/mlotfic/hijri_datetime/blob/main/CHANGELOG.md"

# -----------------------------
# setuptools config
# -----------------------------
[tool.setuptools]
package-dir = {"" = "src"}                   # Use src layout
include-package-data = true                  # Include package data from MANIFEST or tool config
license-files = ["LICEN[CS]E*"]

[tool.setuptools.packages.find]
where = ["src"]
include = ["hijri_datetime*"]
exclude = ["tests*"]

# Include data files (e.g., *.json, *.csv)
[tool.setuptools.package-data]
"hijri_datetime.data" = ["*.json", "*.csv", "*.yml", "*.yaml", "*.txt"]
"*" = ["examples/*.py"]

# Versioning: Using static version above
# [tool.setuptools_scm]
# write_to = "src/hijri_datetime/_version.py"

# -----------------------------
# Pytest Configuration
# -----------------------------
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--strict-config",
    "--cov=hijri_datetime",               # Updated for new package name
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
]

# -----------------------------
# Black Formatter Config
# -----------------------------
[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311", "py312"]
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | src/hijri_datetime/_version\.py
)/
'''

# -----------------------------
# Flake8 Linter Config
# -----------------------------
[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    "src/hijri_datetime/_version.py"
]

# -----------------------------
# MyPy Type Checker Config
# -----------------------------
[tool.mypy]
python_version = "3.8"
files = ["src/hijri_datetime", "tests"]
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

# Loosened rules for test files
[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false